var search_data = {"index":{"searchIndex":["alexaresponsehandler","amazonresponse","applicationrecord","baseresponse","cancelintentbuilder","conditionintentbuilder","conditionresponse","createsymptomlogentries","createsymptomlogs","createsymptoms","createusers","everybodyhurtsintentbuilder","helpintentbuilder","installaudited","intentbuilder","jsoninteractionmodel","nextintentbuilder","nointentbuilder","pauseintentbuilder","previousintentbuilder","readallintentbuilder","readentryintentbuilder","readlastintentbuilder","readresponse","repeatintentbuilder","responsefactory","responsehelpers","resumeintentbuilder","sampleintents","sinatra","fibro","helpers","startoverintentbuilder","stopintentbuilder","symptom","symptominfointentbuilder","symptomintentbuilder","symptomlog","symptomlogentry","symptomresponse","user","utterancesmodel","yesintentbuilder","==()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add()","add_indexes()","add_indexes_and_keys()","add_indexes_and_keys()","add_indexes_and_keys()","add_indexes_and_keys()","add_intents()","add_slot()","authenticate()","build_response()","cancel_response()","change()","change()","change()","change()","change()","construct_response()","construct_start_over_response()","count()","describe()","end_session_response()","help_response()","launch_response()","new()","new()","new()","new()","new()","new()","next_response()","no_response()","pause_response()","previous_response()","registered()","repeat_response()","response()","response()","response()","response()","response()","response()","response()","resume_response()","save()","save()","schema()","start_over_response()","stop_response()","to_s()","to_s()","to_s()","to_s()","yes_response()","readme","sampleutterances","interactionmodel.json","launchrequest.json","app.rake","bootstrap.rake","db.rake","generate.rake","metrics.rake","sdoc.rake"],"longSearchIndex":["alexaresponsehandler","amazonresponse","applicationrecord","baseresponse","cancelintentbuilder","conditionintentbuilder","conditionresponse","createsymptomlogentries","createsymptomlogs","createsymptoms","createusers","everybodyhurtsintentbuilder","helpintentbuilder","installaudited","intentbuilder","jsoninteractionmodel","nextintentbuilder","nointentbuilder","pauseintentbuilder","previousintentbuilder","readallintentbuilder","readentryintentbuilder","readlastintentbuilder","readresponse","repeatintentbuilder","responsefactory","responsehelpers","resumeintentbuilder","sampleintents","sinatra","sinatra::fibro","sinatra::fibro::helpers","startoverintentbuilder","stopintentbuilder","symptom","symptominfointentbuilder","symptomintentbuilder","symptomlog","symptomlogentry","symptomresponse","user","utterancesmodel","yesintentbuilder","applicationrecord#==()","cancelintentbuilder#add()","conditionintentbuilder#add()","everybodyhurtsintentbuilder#add()","helpintentbuilder#add()","intentbuilder#add()","nextintentbuilder#add()","nointentbuilder#add()","pauseintentbuilder#add()","previousintentbuilder#add()","readallintentbuilder#add()","readentryintentbuilder#add()","readlastintentbuilder#add()","repeatintentbuilder#add()","resumeintentbuilder#add()","startoverintentbuilder#add()","stopintentbuilder#add()","symptominfointentbuilder#add()","symptomintentbuilder#add()","symptomlog#add()","yesintentbuilder#add()","installaudited#add_indexes()","createsymptomlogentries#add_indexes_and_keys()","createsymptomlogs#add_indexes_and_keys()","createsymptoms#add_indexes_and_keys()","createusers#add_indexes_and_keys()","intentbuilder#add_intents()","intentbuilder#add_slot()","user::authenticate()","sinatra::fibro::helpers#build_response()","responsehelpers#cancel_response()","createsymptomlogentries#change()","createsymptomlogs#change()","createsymptoms#change()","createusers#change()","installaudited#change()","responsehelpers#construct_response()","responsehelpers#construct_start_over_response()","symptomlog#count()","utterancesmodel#describe()","responsehelpers#end_session_response()","responsehelpers#help_response()","responsehelpers#launch_response()","alexaresponsehandler::new()","baseresponse::new()","intentbuilder::new()","jsoninteractionmodel::new()","responsefactory::new()","utterancesmodel::new()","responsehelpers#next_response()","responsehelpers#no_response()","responsehelpers#pause_response()","responsehelpers#previous_response()","sinatra::fibro::registered()","responsehelpers#repeat_response()","alexaresponsehandler#response()","amazonresponse#response()","baseresponse#response()","conditionresponse#response()","readresponse#response()","responsefactory#response()","symptomresponse#response()","responsehelpers#resume_response()","jsoninteractionmodel#save()","utterancesmodel#save()","jsoninteractionmodel#schema()","responsehelpers#start_over_response()","responsehelpers#stop_response()","symptom#to_s()","symptomlog#to_s()","symptomlogentry#to_s()","user#to_s()","responsehelpers#yes_response()","","","","","","","","","",""],"info":[["AlexaResponseHandler","","classes/AlexaResponseHandler.html","","<p>Class to define custom responses to Alexa intent request\n"],["AmazonResponse","","classes/AmazonResponse.html","","<p>Class to define custom responses to Alexa Amazon built-in intent request\n"],["ApplicationRecord","","classes/ApplicationRecord.html","","<p>Abstract class to hold common methods for application models\n"],["BaseResponse","","classes/BaseResponse.html","","<p>Abstract base class to define custom responses to Alexa intent requests\n"],["CancelIntentBuilder","","classes/CancelIntentBuilder.html","","<p>Class to build utterances for Cancel Intent\n"],["ConditionIntentBuilder","","classes/ConditionIntentBuilder.html","","<p>Class to build Condition Intent\n"],["ConditionResponse","","classes/ConditionResponse.html","","<p>Class to define custom condition responses to Alexa intent requests\n"],["CreateSymptomLogEntries","","classes/CreateSymptomLogEntries.html","","<p>Migration to create symptom log entries table\n"],["CreateSymptomLogs","","classes/CreateSymptomLogs.html","","<p>Migration to create symptom log table\n"],["CreateSymptoms","","classes/CreateSymptoms.html","","<p>Migration to create symptoms table\n"],["CreateUsers","","classes/CreateUsers.html","","<p>Migration to create users table\n"],["EverybodyHurtsIntentBuilder","","classes/EverybodyHurtsIntentBuilder.html","","<p>Class to build utterances for playing &#39;Everybody Hurts&#39; by REM\n"],["HelpIntentBuilder","","classes/HelpIntentBuilder.html","","<p>Class to build utterances for Help Intent\n"],["InstallAudited","","classes/InstallAudited.html","","<p>Stores audit information using audited gem\n"],["IntentBuilder","","classes/IntentBuilder.html","","<p>Abstract class to provide base methods used in building custom Alexa\nintents for voice user interfaces â€¦\n"],["JsonInteractionModel","","classes/JsonInteractionModel.html","","<p>Class to generate JSON Interaction Model\n"],["NextIntentBuilder","","classes/NextIntentBuilder.html","","<p>Class to build utterances for Next Intent\n"],["NoIntentBuilder","","classes/NoIntentBuilder.html","","<p>Class to build utterances for No Intent\n"],["PauseIntentBuilder","","classes/PauseIntentBuilder.html","","<p>Class to build utterances for Pause Intent\n"],["PreviousIntentBuilder","","classes/PreviousIntentBuilder.html","","<p>Class to build utterances for Yes Intent\n"],["ReadAllIntentBuilder","","classes/ReadAllIntentBuilder.html","","<p>Class to build ReadAll Intent\n"],["ReadEntryIntentBuilder","","classes/ReadEntryIntentBuilder.html","","<p>Class to build ReadEntry Intent\n"],["ReadLastIntentBuilder","","classes/ReadLastIntentBuilder.html","","<p>Class to build ReadLast Intent\n"],["ReadResponse","","classes/ReadResponse.html","","<p>Class to define custom read responses to Alexa intent requests\n"],["RepeatIntentBuilder","","classes/RepeatIntentBuilder.html","","<p>Class to build utterances for Repeat Intent\n"],["ResponseFactory","","classes/ResponseFactory.html","","<p>Factory class that returns the correct Response Class for a Alexa request\n"],["ResponseHelpers","","classes/ResponseHelpers.html","","<p>Common methods to construct Alexa responses\n"],["ResumeIntentBuilder","","classes/ResumeIntentBuilder.html","","<p>Class to build utterances for Resume Intent\n"],["SampleIntents","","classes/SampleIntents.html","","<p>Static class that contains the Alexa intent samples\n"],["Sinatra","","classes/Sinatra.html","","<p>Namespace in Sinatra namespace\n"],["Sinatra::Fibro","","classes/Sinatra/Fibro.html","","<p>Main entry point for Alexa request\n"],["Sinatra::Fibro::Helpers","","classes/Sinatra/Fibro/Helpers.html","","<p>Helpers to be used in registering Sinatra app\n"],["StartOverIntentBuilder","","classes/StartOverIntentBuilder.html","","<p>Class to build utterances for Start over Intent\n"],["StopIntentBuilder","","classes/StopIntentBuilder.html","","<p>Class to build utterances for Stop Intent\n"],["Symptom","","classes/Symptom.html","","<p>Represents a Symptom\n"],["SymptomInfoIntentBuilder","","classes/SymptomInfoIntentBuilder.html","","<p>Class to build Symptom Information Intent\n"],["SymptomIntentBuilder","","classes/SymptomIntentBuilder.html","","<p>Class to build Symptom Intent\n"],["SymptomLog","","classes/SymptomLog.html","","<p>Represents a Symptom Log\n"],["SymptomLogEntry","","classes/SymptomLogEntry.html","","<p>Represents a Symptom log Entry\n"],["SymptomResponse","","classes/SymptomResponse.html","","<p>Class to define custom symptom responses to Alexa intent requests\n"],["User","","classes/User.html","","<p>Represents an application user/respondent\nUsers are linked to Alexa users\nusing Alexa session request.user_id ...\n"],["UtterancesModel","","classes/UtterancesModel.html","","<p>Class to generate sample utterances file\n"],["YesIntentBuilder","","classes/YesIntentBuilder.html","","<p>Class to build utterances for Yes Intent\n"],["==","ApplicationRecord","classes/ApplicationRecord.html#method-i-3D-3D","(other)","<p>Redefine equality for application records\nRather than just checking for\nequal IDs, check that all attributes ...\n"],["add","CancelIntentBuilder","classes/CancelIntentBuilder.html#method-i-add","()",""],["add","ConditionIntentBuilder","classes/ConditionIntentBuilder.html#method-i-add","()",""],["add","EverybodyHurtsIntentBuilder","classes/EverybodyHurtsIntentBuilder.html#method-i-add","()",""],["add","HelpIntentBuilder","classes/HelpIntentBuilder.html#method-i-add","()",""],["add","IntentBuilder","classes/IntentBuilder.html#method-i-add","()",""],["add","NextIntentBuilder","classes/NextIntentBuilder.html#method-i-add","()",""],["add","NoIntentBuilder","classes/NoIntentBuilder.html#method-i-add","()",""],["add","PauseIntentBuilder","classes/PauseIntentBuilder.html#method-i-add","()",""],["add","PreviousIntentBuilder","classes/PreviousIntentBuilder.html#method-i-add","()",""],["add","ReadAllIntentBuilder","classes/ReadAllIntentBuilder.html#method-i-add","()",""],["add","ReadEntryIntentBuilder","classes/ReadEntryIntentBuilder.html#method-i-add","()",""],["add","ReadLastIntentBuilder","classes/ReadLastIntentBuilder.html#method-i-add","()",""],["add","RepeatIntentBuilder","classes/RepeatIntentBuilder.html#method-i-add","()",""],["add","ResumeIntentBuilder","classes/ResumeIntentBuilder.html#method-i-add","()",""],["add","StartOverIntentBuilder","classes/StartOverIntentBuilder.html#method-i-add","()",""],["add","StopIntentBuilder","classes/StopIntentBuilder.html#method-i-add","()",""],["add","SymptomInfoIntentBuilder","classes/SymptomInfoIntentBuilder.html#method-i-add","()",""],["add","SymptomIntentBuilder","classes/SymptomIntentBuilder.html#method-i-add","()",""],["add","SymptomLog","classes/SymptomLog.html#method-i-add","(entry)",""],["add","YesIntentBuilder","classes/YesIntentBuilder.html#method-i-add","()",""],["add_indexes","InstallAudited","classes/InstallAudited.html#method-i-add_indexes","()",""],["add_indexes_and_keys","CreateSymptomLogEntries","classes/CreateSymptomLogEntries.html#method-i-add_indexes_and_keys","()",""],["add_indexes_and_keys","CreateSymptomLogs","classes/CreateSymptomLogs.html#method-i-add_indexes_and_keys","()",""],["add_indexes_and_keys","CreateSymptoms","classes/CreateSymptoms.html#method-i-add_indexes_and_keys","()",""],["add_indexes_and_keys","CreateUsers","classes/CreateUsers.html#method-i-add_indexes_and_keys","()",""],["add_intents","IntentBuilder","classes/IntentBuilder.html#method-i-add_intents","(intents)",""],["add_slot","IntentBuilder","classes/IntentBuilder.html#method-i-add_slot","(name, type, &block)",""],["authenticate","User","classes/User.html#method-c-authenticate","(user_id)",""],["build_response","Sinatra::Fibro::Helpers","classes/Sinatra/Fibro/Helpers.html#method-i-build_response","(echo_request, response)",""],["cancel_response","ResponseHelpers","classes/ResponseHelpers.html#method-i-cancel_response","()",""],["change","CreateSymptomLogEntries","classes/CreateSymptomLogEntries.html#method-i-change","()",""],["change","CreateSymptomLogs","classes/CreateSymptomLogs.html#method-i-change","()",""],["change","CreateSymptoms","classes/CreateSymptoms.html#method-i-change","()",""],["change","CreateUsers","classes/CreateUsers.html#method-i-change","()",""],["change","InstallAudited","classes/InstallAudited.html#method-i-change","()",""],["construct_response","ResponseHelpers","classes/ResponseHelpers.html#method-i-construct_response","(spoken_text)",""],["construct_start_over_response","ResponseHelpers","classes/ResponseHelpers.html#method-i-construct_start_over_response","(spoken_text)",""],["count","SymptomLog","classes/SymptomLog.html#method-i-count","()",""],["describe","UtterancesModel","classes/UtterancesModel.html#method-i-describe","()",""],["end_session_response","ResponseHelpers","classes/ResponseHelpers.html#method-i-end_session_response","()",""],["help_response","ResponseHelpers","classes/ResponseHelpers.html#method-i-help_response","()",""],["launch_response","ResponseHelpers","classes/ResponseHelpers.html#method-i-launch_response","()",""],["new","AlexaResponseHandler","classes/AlexaResponseHandler.html#method-c-new","(user, echo_request, echo_response)",""],["new","BaseResponse","classes/BaseResponse.html#method-c-new","(echo_request, echo_response)",""],["new","IntentBuilder","classes/IntentBuilder.html#method-c-new","(intent)",""],["new","JsonInteractionModel","classes/JsonInteractionModel.html#method-c-new","(model)",""],["new","ResponseFactory","classes/ResponseFactory.html#method-c-new","(echo_request, echo_response)",""],["new","UtterancesModel","classes/UtterancesModel.html#method-c-new","(model)",""],["next_response","ResponseHelpers","classes/ResponseHelpers.html#method-i-next_response","()",""],["no_response","ResponseHelpers","classes/ResponseHelpers.html#method-i-no_response","()",""],["pause_response","ResponseHelpers","classes/ResponseHelpers.html#method-i-pause_response","()",""],["previous_response","ResponseHelpers","classes/ResponseHelpers.html#method-i-previous_response","()",""],["registered","Sinatra::Fibro","classes/Sinatra/Fibro.html#method-c-registered","(app)",""],["repeat_response","ResponseHelpers","classes/ResponseHelpers.html#method-i-repeat_response","()",""],["response","AlexaResponseHandler","classes/AlexaResponseHandler.html#method-i-response","()",""],["response","AmazonResponse","classes/AmazonResponse.html#method-i-response","()",""],["response","BaseResponse","classes/BaseResponse.html#method-i-response","()","<p>Must be overridden in sub classes\n"],["response","ConditionResponse","classes/ConditionResponse.html#method-i-response","()",""],["response","ReadResponse","classes/ReadResponse.html#method-i-response","()",""],["response","ResponseFactory","classes/ResponseFactory.html#method-i-response","()",""],["response","SymptomResponse","classes/SymptomResponse.html#method-i-response","()",""],["resume_response","ResponseHelpers","classes/ResponseHelpers.html#method-i-resume_response","()",""],["save","JsonInteractionModel","classes/JsonInteractionModel.html#method-i-save","(filename)",""],["save","UtterancesModel","classes/UtterancesModel.html#method-i-save","(filename)",""],["schema","JsonInteractionModel","classes/JsonInteractionModel.html#method-i-schema","()",""],["start_over_response","ResponseHelpers","classes/ResponseHelpers.html#method-i-start_over_response","()",""],["stop_response","ResponseHelpers","classes/ResponseHelpers.html#method-i-stop_response","()",""],["to_s","Symptom","classes/Symptom.html#method-i-to_s","()",""],["to_s","SymptomLog","classes/SymptomLog.html#method-i-to_s","()",""],["to_s","SymptomLogEntry","classes/SymptomLogEntry.html#method-i-to_s","()",""],["to_s","User","classes/User.html#method-i-to_s","()",""],["yes_response","ResponseHelpers","classes/ResponseHelpers.html#method-i-yes_response","()",""],["README","","files/README_md.html","","<p>Mental Test\n<p><img src=\"https://travis-ci.org/stevenbeales/fibro.png\">\n<p><img\nsrc=\"https://api.codeclimate.com/v1/badges/6574b93819edbc0cff7d/maintainability\">\nâ€¦\n"],["SampleUtterances","","files/app/speech_assets/files/SampleUtterances_txt.html","","<p>ConditionIntent talk about {Condition} ConditionIntent tell me about\n{Condition} ConditionIntent tell â€¦\n"],["interactionModel.json","","files/app/speech_assets/files/interactionModel_json.html","","<p>{\n\n<pre><code>&quot;intents&quot;: [\n  {\n    &quot;intent&quot;: &quot;ConditionIntent&quot;,\n    &quot;slots&quot;: [\n      {\n        &quot;name&quot;: &quot;Condition&quot;, ...\n</code></pre>\n"],["LaunchRequest.json","","files/db/fixtures/LaunchRequest_json.html","","<p>{\n\n<pre><code>&quot;version&quot;: &quot;1.0&quot;,\n&quot;session&quot;: {\n  &quot;new&quot;: true,\n  &quot;sessionId&quot;: &quot;amzn1.echo-api.session.abeee1a7-aee0-41e6-8192-e6faaed9f5ef&quot;, ...\n</code></pre>\n"],["app.rake","","files/lib/tasks/app_rake.html","","<p># frozen_string_literal: true\n<p>namespace :app do\n\n<pre><code>desc &#39;Run development web server&#39;\ntask :run do\n  sh %( ...\n</code></pre>\n"],["bootstrap.rake","","files/lib/tasks/bootstrap_rake.html","","<p># frozen_string_literal: true\n<p>desc &#39;Get the application set up for development&#39;\n<p>task bootstrap: â€¦\n"],["db.rake","","files/lib/tasks/db_rake.html","","<p># frozen_string_literal: true\n<p>namespace :db do\n\n<pre><code>desc &#39;Drop, create, migrate then seed the development database&#39; ...\n</code></pre>\n"],["generate.rake","","files/lib/tasks/generate_rake.html","","<p># frozen_string_literal: true\n<p>desc &#39;Generate a new project at dir=foo&#39; task :generate do\n\n<pre><code># Create ...\n</code></pre>\n"],["metrics.rake","","files/lib/tasks/metrics_rake.html","","<p># frozen_string_literal: true\n<p>namespace :metrics do\n\n<pre><code>desc &#39;generate line counts for each module&#39;\ntask :lines ...\n</code></pre>\n"],["sdoc.rake","","files/lib/tasks/sdoc_rake.html","","<p># frozen_string_literal: true\n<p># Rakefile require &#39;sdoc&#39; # and use your RDoc task the same way â€¦\n"]]}}